#!/usr/bin/env python

import argparse
import os.path

def cmd_clone(src, dst=None):
    print 'clonez'

def cmd_fetch(*args):
    print 'fetchz'

COMMANDS = {k[4:]: v for k, v in globals().iteritems() if k.startswith('cmd_')}

def main():
    p = argparse.ArgumentParser(
        usage = 'git tl [-h] <command> [<args>]',
        description = 'A git interface to mercurial.  hg++.',
    )

    p.add_argument('cmd', nargs='+', help='<%s>' % ('|'.join(COMMANDS)))
    args = p.parse_args()

    cmd_name, cmd_args = args.cmd[0], args.cmd[1:]
    if cmd_name not in COMMANDS:
        p.print_usage()
        return 1

    cmd = COMMANDS[cmd_name]
    try:
        cmd(*cmd_args)
    except TypeError, e:
        # print the error, but not the traceback
        print 'fatal: %s' % (e,)
        return 1

if __name__ == '__main__':
    exit(main())
